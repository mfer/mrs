Flow
====================================================================

L ---> DG_z(L), A
	DG_z(L) ---> w, G, A
		G ---> D
		w ---> PDA(eps), PG(x)
		A ---> PG(x)
			D ---> N^in_D, N^out_D						
				N^in_D ---> PDA(eps)
				N^out_D ---> PDA(eps)
				eps ---> PDA(eps)
					PDA(eps) ---> x		
						x ---> PG(x)
							PG(x) ---> I



Ensure Function(Require)
// Description
====================================================================

w,DG_z link_into_graph (L)
// Construct the Disk Graph DGz, definition-4.4 from olga:2012, using the set of links L
// And the weight w for the links using the data-rates

G,A graph_into_protocol (DGz)
// Construct the conflict graph G and the vertex set A from DGz

D orientate_edge (G)
// Assign an orientation on the conflict edges (needs more study on how to do)

N^in_D,N^out_D get_in_out (D)
// Establish for all links the in and out edges

x PDA(w, N^in_D, N^out_D, eps)
// Price-Directive Algorithm

I <-- PG(w, A, x)
// Prune-and-Grow algorithm